<launch>
  <!-- map -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(find segway_robot)/willowMap.pgm 0.1" respawn="false" />

  <!-- this launch file corresponds to robot model in pkgs/segway_robot for full erratic -->
  <!-- start up wg world 
  <include file="$(find gazebo)/launch/empty_world.launch"/> -->
  <include file="$(find gazebo)/launch/wg_world.launch"/> 

  <!-- Create a transform sender for linking these frames. 
  <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_footprint segway_base 40" /> -->

  <!-- send segbot.xml to param server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find segway_robot)/segbot_with_arm.urdf.xacro'" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_segway" pkg="gazebo_tools" type="gazebo_model" args="-z 0.7 -p robot_description spawn robot_description" respawn="false" output="screen" />

  <!-- Controller Manager -->
  <include file="$(find pr2_controller_manager)/controller_manager.launch" />

  <!-- Fake Calibration -->
  <node pkg="rostopic" type="rostopic" name="fake_joint_calibration"
        args="pub /calibrated std_msgs/Bool true" />

  <!-- load controllers -->
  <rosparam file="$(find base_sim_controller)/base_sim_controller.yaml" command="load" />
  <node pkg="pr2_controller_manager" type="spawner" args="base_sim_controller_name" name="base_sim_controller_spawner" />
  <!--
  <rosparam file="$(find servo_sim_controller)/servo_sim_controller.yaml" command="load" />
  <node pkg="pr2_controller_manager" type="spawner" args="servo_sim_controller_name" name="servo_sim_controller_spawner" />
  -->

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <remap from="map" to="/map" />
    <remap from="move_base_simple/goal" to="/goal" />
    <remap from="/cmd_vel" to="/base_controller/command" />
    <param name="controller_frequency" value="10.0" />
    <param name="global_costmap/robot_base_frame" value="/base_footprint" />

    <param name="base_global_planner" value="SBPLGlobalPlanner" />
    <param name="SBPLGlobalPlanner/primitive_filename" value="$(find segway_robot)/move_base/segbot_10cm.mprim" />

    <rosparam file="$(find segway_robot)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find segway_robot)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find segway_robot)/move_base/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find segway_robot)/move_base/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find segway_robot)/move_base/navfn_params.yaml" command="load" />
    <rosparam file="$(find segway_robot)/move_base/base_local_planner_params.yaml" command="load" />
  </node>

  <!-- localization 
  <node pkg="amcl" type="amcl" name="amcl" respawn="true">
    <param name="odom_model_type" value="omni"/>
    <param name="odom_alpha5" value="0.1"/>
    <param name="transform_tolerance" value="0.2" />
    <param name="gui_publish_rate" value="10.0"/>
    <param name="laser_max_beams" value="30"/>
    <param name="min_particles" value="500"/>
    <param name="max_particles" value="5000"/>
    <param name="kld_err" value="0.05"/>
    <param name="kld_z" value="0.99"/>
    <param name="odom_alpha1" value="0.2"/>
    <param name="odom_alpha2" value="0.2"/>
    <param name="odom_alpha3" value="0.8"/>
    <param name="odom_alpha4" value="0.2"/>
    <param name="laser_z_hit" value="0.5"/>
    <param name="laser_z_short" value="0.05"/>
    <param name="laser_z_max" value="0.05"/>
    <param name="laser_z_rand" value="0.5"/>
    <param name="laser_sigma_hit" value="0.2"/>
    <param name="laser_lambda_short" value="0.1"/>
    <param name="laser_lambda_short" value="0.1"/>
    <param name="laser_model_type" value="likelihood_field"/>
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <param name="update_min_d" value="0.2"/>
    <param name="update_min_a" value="0.5"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="base_frame_id" value="base_footprint"/>
    <param name="resample_interval" value="1"/>
    <param name="transform_tolerance" value="0.1"/>
    <param name="recovery_alpha_slow" value="0.0"/>
    <param name="recovery_alpha_fast" value="0.0"/>
  </node>
  -->
  <node pkg="fake_localization" type="fake_localization" name="fake_localization" respawn="false">
  </node>

  <!--
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <param name="freq" value="30.0"/>
    <param name="sensor_timeout" value="1.0"/>
    <param name="publish_tf" value="true"/>
    <param name="odom_used" value="true"/>
    <param name="imu_used" value="false"/>
    <param name="vo_used" value="false"/>
  </node>
  -->

</launch>

